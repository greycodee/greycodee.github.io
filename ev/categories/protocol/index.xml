<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Protocol on Greycode&#39;s Blog</title>
    <link>http://localhost:1313/categories/protocol/</link>
    <description>Recent content in Protocol on Greycode&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Jun 2021 11:44:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>什么是HTTP协议？</title>
      <link>http://localhost:1313/posts/0143cd7666cd44389fe6f565e10eee1a/</link>
      <pubDate>Fri, 04 Jun 2021 11:44:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/0143cd7666cd44389fe6f565e10eee1a/</guid>
      <description>版本介绍 HTTP 协议不用我多说了吧，大家都知道，现在我 web 开发一般都是使用 HTTP 协议来进行通信的。到目前为止，HTTP 进行了几次版本更新，HTTP 1.1 就是表示HTTP 的 1.1 版本。1.1 版本也是目前大部分网站所用的版本。
HTTP 0.9 发布时间：1991 年 简介：梦开始的地方，只接受GET一种请求方法，没有在通讯中指定版本号，且不支持请求头。由于该版本不支持POST方法，因此客户端无法向服务器传递太多信息。 HTTP 1.0 发布时间：1996 年 5 月 简介：这是第一个在通讯中指定版本号的HTTP协议版本。同时比 0.9 版本增加大量新特性。非持续连接，每次都要重新与服务器建立连接。 HTTP 1.1 发布时间：1997 年1月 简介：默认采用持续连接（Connection: keep-alive），能很好地配合代理服务器工作。还支持以管道方式在同时发送多个请求，以便降低线路负载，提高传输速度。同时这也是目前最流行的版本。 HTTP/1.1相较于HTTP/1.0协议的区别主要体现在：
缓存处理 带宽优化及网络连接的使用 错误通知的管理 消息在网络中的发送 互联网地址的维护 安全性及完整性 HTTP 2.0 发布时间：2015 年 5 月 简介：HTTP/2 是 HTTP 协议自 1999 年 HTTP 1.1 的改进版 RFC 2616 发布后的首个更新，主要基于 SPDY 协议。它由互联网工程任务组（IETF）的Hypertext Transfer Protocol Bis（httpbis）工作小组进行开发。该组织于 2014 年 12 月将 HTTP/2 标准提议递交至 IESG 进行讨论，于 2015 年 2 月 17 日被批准。 报文格式 请求报文 请求报文分为 4 个部分，分别是请求行、请求头、换行行、请求数据，每个部分的末尾都会带上回车符（CR，ASCII：0d）和换行符（LF，ASCII：0a）</description>
    </item>
    
    <item>
      <title>telnet使用smtp协议发送qq邮件</title>
      <link>http://localhost:1313/posts/4dd3868b-e23e-4446-b7ec-fd95e98612f4/</link>
      <pubDate>Tue, 23 Mar 2021 10:36:44 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/4dd3868b-e23e-4446-b7ec-fd95e98612f4/</guid>
      <description>操作步骤 telnet命令调试QQ邮箱的smtp服务器
telnet smtp.qq.com 25 # 响应 Trying 183.3.225.42... Connected to smtp.qq.com. Escape character is &amp;#39;^]&amp;#39;. 220 newxmesmtplogicsvrsza5.qq.com XMail Esmtp QQ Mail Server. 使用EHLO命令，指示ESMTP会话开始。服务器可以在它对 EHLO 的响应中表明自己支持 ESMTP 命令
EHLO smtp.qq.com # 响应 250-newxmesmtplogicsvrsza5.qq.com 250-PIPELINING 250-SIZE 73400320 250-STARTTLS 250-AUTH LOGIN PLAIN 250-AUTH=LOGIN 250-MAILCOMPRESS 250 8BITMIME 使用AUTH关键字进行身份验证，这里使用AUTH LOGIN，然后输入Base64编码的用户名和QQ邮箱授权码
AUTH LOGIN // base64编码的`Username:` $ 334 VXNlcm5hbWU6 // base64编码的`Password:` $ 334 UGFzc3dvcmQ6 # 响应 235 Authentication successful 使用MAIL命令，通过标识邮件的发件人来标识邮件传输开始；以 MAIL FROM 的形式使用。
MAIL FROM:&amp;lt;211019847@qq.com&amp;gt; # 响应 250 OK.</description>
    </item>
    
  </channel>
</rss>
