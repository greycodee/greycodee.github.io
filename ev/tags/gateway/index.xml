<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gateway on Greycode&#39;s Blog</title>
    <link>http://localhost:1313/tags/gateway/</link>
    <description>Recent content in Gateway on Greycode&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 May 2021 13:05:58 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/gateway/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>快速搭建一个SpringGateway网关</title>
      <link>http://localhost:1313/posts/9944cc0febd34a3ebd04eaa1564f4c3a/</link>
      <pubDate>Fri, 07 May 2021 13:05:58 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/9944cc0febd34a3ebd04eaa1564f4c3a/</guid>
      <description>☝️搭建脚手架 我们可以去 Spring initializer 网站或者用 IDEA 来快速创建出一个 Spring Cloud Gateway 项目。
这里我们选择的注册中心是 Zookeeper，你也可以自己选择其他的注册中心来注册你的项目，比如阿里巴巴的 Nacos 等。
配置完相关信息后，点击下面的 GENERATE 按钮就可以导出项目的 zip 压缩包，解压后用 IDE 打开。
打开后就是这个样子：
✌️配置路由 Ymal 方式配置 为了方便配置，我们把 application.properties 改成 application.yml 。
然后配置一个转发到百度到路由。
spring: cloud: gateway: routes: - id: route-demo uri: https://baidu.com predicates: - Path=/** 在配置中，我加来一个谓词 Path ，表示所有当请求都会匹配到这个路由下，然后转发到 uri 配置到网址里。所以当我们打开浏览器访问 [http://localhost:8080/](http://localhost:8080/) 是就会自动跳转到百度到首页。
Java 代码方式配置 除了用配置文件配置路由外，我们还可以用代码的方式来配置路由。
下面来展示一下代码方式配置的路由：
@Bean public RouteLocator routesConfig(RouteLocatorBuilder builder){ return builder.routes() .route(&amp;#34;route-demo&amp;#34;,r -&amp;gt; r.path(&amp;#34;/**&amp;#34;).uri(&amp;#34;https://baidu.com&amp;#34;)) .build(); } 这几行代码实现的是和上面配置一样的功能，当访问 [http://localhost:8080/](http://localhost:8080/) 时也会跳转到百度首页。</description>
    </item>
    
  </channel>
</rss>
